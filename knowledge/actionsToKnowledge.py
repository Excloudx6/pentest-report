#!/usr/bin/python3
from pymongo import MongoClient
import time
import sys
import json
import os
from KnowledgeUtils import KnowledgeUtils

class Merge:
    def __init__(self):
        self.utils = KnowledgeUtils()

    def emit_port(self, pentest_id, host, port, data, action):
        print('Emiting '+ str(data))
        if(isinstance(data, list)):
            return
        for k in data.keys():
            self.utils.knowledge.update({'type': 'port', 'pentest_id': pentest_id, 'host': host, 'port': port}, {'$set': {'data.'+k: data[k]}}, upsert=True)


    # quick and dirty. E.g. no udp support.

    def scan(self):
#        self.utilsknowledge.remove({})
        # TODO: exclude deleted pentests?
        for a in self.utils.actions.find({'status': {'$in': ['done']}, 'deleted': {'$ne': True}}):
            print('Scanning: ' + str(a['_id']))
            r = a['result']
            for k in r.keys():
                print(str(k))
                if k=='hosts':
                    for host in r['hosts']:
                        print("   " + host)
                        if 'tcp' in r['hosts'][host]:
                            for port in r['hosts'][host]['tcp'].keys():
                                self.emit_port(a['pentest_id'], host, port, r['hosts'][host]['tcp'][port], a)


        for k in self.utils.knowledge.find():
            print("knowledge: " + str(k))

m = Merge()
m.scan()
