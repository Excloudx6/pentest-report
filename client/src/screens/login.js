import React, { Component } from 'react';
import {Grid, Card, Button, Form, Divider, Message} from 'semantic-ui-react'
import 'whatwg-fetch'
import {withRouter} from 'react-router-dom'
import {urlPrefix} from '../utils.js'


class LoginCheck_withRouter extends Component {
  state = {}
  componentDidMount() {

    if(!this.props.skip) //debug mode; skip login/
    // if(1)
    {
      var t = this;
      fetch(urlPrefix + '/login/whoami', {method: 'get',credentials: 'include'})
      .then(response => {
        return response.json()})
      .then(function(json) {
        if(json.user && 'shortName' in json.user) {
          json.user.username = json.user.shortName; // fix for inconsistency between the SAML user description and the local user descriptions. user.username will always whave a unique user name this way.
        }
        t.setState({login: json});
        if(json.loggedIn === false) {
          t.props.history.push('/authentication');
        }
      });

      fetch(urlPrefix + '/config/public', {method: 'get',credentials: 'include'})
      .then(response => {
        return response.json()})
      .then(function(json) {
        t.setState({configPublic: json});
      });

      fetch(urlPrefix + '/config/postauth', {method: 'get',credentials: 'include'})
      .then(response => {
        return response.json()})
      .then(function(json) {
        t.setState({configPostAuth: json});
      });

    }
  }

  render() {return (
    <div>
      {React.cloneElement(this.props.children, { whoami: this.state.login, configPublic: this.state.configPublic, configPostAuth: this.state.configPostAuth })}
    </div>
  )
  }
}

export const LoginCheck = withRouter(LoginCheck_withRouter);

export class Login extends Component {
  showSAMLLogin = () => {
    return (this.props.configPublic && !('loginScreen' in this.props.configPublic) 
    || this.props.configPublic && this.props.configPublic.loginScreen && this.props.configPublic.loginScreen.showSAMLLogin == true)
  }

  showLocalLogin = () => {
    return (this.props.configPublic && !('loginScreen' in this.props.configPublic) 
    || this.props.configPublic && this.props.configPublic.loginScreen && this.props.configPublic.loginScreen.showLocalLogin == true);
  }

  render() {return (
<div>

    <Grid centered textAlign='center'>
    <Grid.Row centered columns={1} >
    <Grid.Column className="centered">
    <Card centered={true}>
      <Card.Content>
        <Card.Header>Login</Card.Header>
      </Card.Content><Card.Content>
        {this.showSAMLLogin() && (
          <Card.Description textAlign='center'>
          <Button primary onClick={() => {window.location=urlPrefix + '/login/saml'}}>Login with SSO</Button>
          </Card.Description>
          )}
        {this.showLocalLogin() && this.showSAMLLogin() && (
          <Divider horizontal >or</Divider>
        )}
        {this.showLocalLogin() && (
          <Card.Description>
           <Message negative>Do not use local login for production purposes</Message>
           <Form action={urlPrefix + "/login/local"} method='POST'>
            <Form.Input label='Username' placeholder='local username' name='username'/>
            <Form.Input label='Enter Password' type='password' name='password' />
            <Form.Button secondary>Local login</Form.Button>
           </Form>
          </Card.Description>
        )}
      </Card.Content>
    </Card>

    </Grid.Column>
    </Grid.Row>
    </Grid>

    </div>
  )}
}
