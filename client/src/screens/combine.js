import React, { Component } from 'react';
import ReactDOM from 'react-dom';
import {Form, Grid, Button, Icon} from 'semantic-ui-react'
import 'whatwg-fetch'
import {urlPrefix} from '../utils.js'
// import update from 'immutability-helper'
import RawDataModal from './RawDataModal.js'
import ConfigurableForm from "./pentest/ConfigurableForm.js";

var config = {
  inputs: [
    {
      label: 'Executive Summary',
      name: 'exec_summary',
      type: 'textArea',
      rows: 15,
      spellcheck: true,
      autoHeight: true
    }
   ]
};

export class currentTests  extends Component {
    state = {};

    componentDidMount() {
      this.loadCurrentTests();
    }

    loadCurrentTests() {
        let t = this;
        
	fetch(urlPrefix + '/combine', {method: 'get'})
        .then(response => {
            return response.json()})
        .then(function(json) {
            if ('error' in json) {
                t.setState({error: json});
            } else {
                console.log("got beer?: " +JSON.stringify(json,null,4));
                if (json.length === 0) {
                  t.setState({currentTests: {tests: null, hosts: null}});
                } else {
                  t.setState({currentTests: json});
                }

            }
        }).catch(function(ex) {
            console.log("ERROR:" + ex);
        });
    }

    render () {
      if('currentTests' in this.state)
      return (
      <div className="panel-body">

      <Grid>
         <Grid.Row>
            <Grid.Column width="12">
            <h2>Current Tests <RawDataModal json={this.state.currentTests}/></h2>
	    </Grid.Column>
         </Grid.Row>
      </Grid>
      </div>
    );
    else return null;
  }
}
