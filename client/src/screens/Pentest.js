import React, { Component } from 'react';
import {Menu, Grid, Segment, Breadcrumb} from 'semantic-ui-react'
import 'whatwg-fetch'
import {withRouter,Redirect, Link, Route} from 'react-router-dom'
import {PentestFindings} from './pentest/findings.js'
import {PentestActions} from './pentest/actions.js'
import {PentestProperties} from './pentest/properties.js'
import {PentestTimeline} from './pentest/timeline.js'
import {PentestKnowledge} from './pentest/knowledge.js'
import {PentestReporting} from './pentest/reporting.js'
// import {urlPrefix} from '../utils.js'

class PentestMenuItem_withRouter extends Component {

    handleItemClick = (e, { to }) => {this.props.history.push(to)};

    render() {
        return (
            <Route path={this.props.to} exact={this.props.activeOnlyWhenExact} children={({match }) => (
                <Menu.Item name={this.props.label} active={match ? true : false} onClick={this.handleItemClick} to={this.props.to} /> )}
            />
        )
    }
}
const PentestMenuItem = withRouter(PentestMenuItem_withRouter);

class PentestMenu extends Component {
  state = { activeItem: 'Properties'}

  handleItemClick = (e, { name }) => this.setState({ activeItem: name })


  isSelected(component) {
      return false;
//    return (this.props.match.props.component.name === component);
  }

  render() {
    //const { activeItem } = this.state

    return (
        <div>
          <Menu pointing secondary>
            <PentestMenuItem label='Properties' activeOnlyWhenExact={false} to={this.props.baseurl+'/properties'}/>
            <PentestMenuItem label='Actions' activeOnlyWhenExact={false} to={this.props.baseurl+'/actions'}/>
            <PentestMenuItem label='Knowledge' activeOnlyWhenExact={false} to={this.props.baseurl+'/knowledge'}/>
            <PentestMenuItem label='Timeline' activeOnlyWhenExact={false} to={this.props.baseurl+'/timeline'}/>
            <PentestMenuItem label='Findings' activeOnlyWhenExact={false} to={this.props.baseurl+'/findings'}/>
            <PentestMenuItem label='Reporting' activeOnlyWhenExact={false} to={this.props.baseurl+'/reporting'}/>
          </Menu>
          <Segment basic>
              {this.props.children}
          </Segment>
          <Grid>

            <Grid.Column stretched width={12}>


            </Grid.Column>
          </Grid>
        </div>
    )

  }
}

export class Pentest extends Component {
    render() {
        return (
            <div>
            <Breadcrumb size='small' className="bread">
              <Breadcrumb.Section ><Link to='/'>All pentests</Link></Breadcrumb.Section>
              <Breadcrumb.Divider icon='right chevron' />
              <Breadcrumb.Section active>{this.props.match.params.code}</Breadcrumb.Section>
            </Breadcrumb>
        <PentestMenu pid={this.props.match.params.code} baseurl={this.props.match.url}>
            <Route exact path='/pentest/:code' render={props => (
                    <Redirect to={props.match.url + '/properties'}/>
            )}/>


            <Route  path='/pentest/:code/properties' render={(props) => <PentestProperties {...props} whoami={this.props.whoami} configPublic={this.props.configPublic} configPostAuth={this.props.configPostAuth}/>}/>
            <Route  path='/pentest/:code/findings' render={(props) => <PentestFindings {...props} whoami={this.props.whoami}/>}/>
            <Route  path='/pentest/:code/actions' component={PentestActions}/>
            <Route  path='/pentest/:code/knowledge' component={PentestKnowledge}/>
            <Route  path='/pentest/:code/timeline' component={PentestTimeline}/>
            <Route  path='/pentest/:code/reporting' component={PentestReporting}/>

        </PentestMenu>
</div>
    )}

}
