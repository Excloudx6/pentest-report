import http.client
import sys
import os
import subprocess
import re
from action import Action

class DirbAction(Action):
    def __init__(self):
        super().__init__('dirb_simple', ['http_detection'])

    def __scanUrl(self, protocol, host, port):
        host = re.sub(r'[^a-zA-Z0-9_\.]','', host)
        url = protocol + '://' + host + ":" + port
        print('testing url ',url)
        path = os.path.dirname(os.path.abspath(__file__))

        ret=subprocess.check_output('./dirb.sh ' + url, cwd=path+'/dirb/', shell=True).decode('iso_8859_1').splitlines()
        return ret

    def run(self, actions):

        result = {}
        total = 0
        scanned = 0
        all_urls = [];
        for host,host_det in actions['http_detection']['result']['hosts'].items():
            if 'tcp' in host_det:
                total += len(host_det['tcp'])

        for host,host_det in actions['http_detection']['result']['hosts'].items():
            print('Scanning host {}'.format(host))
            hostresult = {'tcp': {}}
            if 'tcp' in host_det:
                for port, port_det in host_det['tcp'].items():
                    portresult = self.__scanUrl(port_det['protocol'], host, port)
                    if not portresult is None:
                        hostresult['tcp'][port] = {'urls': portresult}
                        all_urls.extend(portresult)
                    scanned += 1
                    self.reportProgress({'percentage': 100*scanned/total, 'description': "{}/{} (scanning: {}:{})".format(str(scanned),str(total),host,str(port))})
                    
            result[host] = hostresult
        ret =  {'status': 'done', 'result': {'hosts': result, 'urls': all_urls}}
        print (ret)
        return ret



a = DirbAction()
a.scan()
