#!/bin/bash
# Create a mongo user for use from remote linux boxes.
# WARNING: vulnerable to SQL injection (i.e. Mongo injection). Use with trusted input only!

if [ "$#" -ne 1 ] ; then
	echo "Run: $0 username"
	echo "e.g. $0 smith.j"
	exit
fi

username=$1

export ENV_SUFFIX=`cat ../config/default.json | jq '.PentestServer.environmentSuffix' | tr -d '"'`

mongo_user_password=`tr -cd '[:alnum:]' < /dev/urandom | fold -w30 | head -n1`
mongohost=`ip addr | grep 'state UP' -A2 | grep 'qlen' -A2 | tail -n1 | awk '{print $2}' | cut -f1  -d'/'`
mongoport=`cat ../config/default.json | jq '.PentestServer.docker.mongodb.externalPort'`
mongodb=`cat ../config/default.json | jq '.PentestServer.mongodb.database' | tr -d '"'`


mongo_admin_password=`cat ./mongo_admin.password`

# Domo user creation

docker exec -it mongo-${ENV_SUFFIX} mongo pentest -u admin -p ${mongo_admin_password} --authenticationDatabase admin --eval "db.dropUser('$username')"

docker exec -it mongo-${ENV_SUFFIX} mongo pentest -u admin -p ${mongo_admin_password} --authenticationDatabase admin --eval "db.createUser({ user: '$username', pwd: '${mongo_user_password}', roles: ['actionsRole']});"
echo
echo "# Your connection string with credentials:"
echo "echo 'mongodb://$username:${mongo_user_password}@$mongohost:$mongoport/$mongodb' > ./mongo_password.txt; chmod 600 ./mongo_password.txt"
echo

echo "$username" >> ./remote_mongousers.txt
