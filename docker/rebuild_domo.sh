#!/bin/bash

export ENV_SUFFIX=`cat ../config/default.json | jq '.PentestServer.environmentSuffix' | tr -d '"'`

mongo_domo_password=`tr -cd '[:alnum:]' < /dev/urandom | fold -w30 | head -n1`
rm -rf ./mongo_domo.password
echo -n "${mongo_domo_password}" > mongo_domo.password


mongo_admin_password=`cat ./mongo_admin.password`

# Domo user creation

docker exec -it mongo-${ENV_SUFFIX} mongo pentest -u admin -p ${mongo_admin_password} --authenticationDatabase admin --eval "db.dropRole('domoRole')"
docker exec -it mongo-${ENV_SUFFIX} mongo pentest -u admin -p ${mongo_admin_password} --authenticationDatabase admin --eval "db.dropUser('domo')"
docker exec -it mongo-${ENV_SUFFIX} mongo pentest -u admin -p ${mongo_admin_password} --authenticationDatabase admin --eval "db.domo_findings.drop()"
docker exec -it mongo-${ENV_SUFFIX} mongo pentest -u admin -p ${mongo_admin_password} --authenticationDatabase admin --eval "db.domo_pentests.drop()"

docker exec -it mongo-${ENV_SUFFIX} mongo pentest -u admin -p ${mongo_admin_password} --authenticationDatabase admin --eval 'db.createView("domo_pentests", "pentests", [ { $project: { "name" : 1, "classification" : 1, "hostCount": { "$size": { "$ifNull": [ "$hosts", [] ] } }, "testType" : 1, "soxRelevant" : 1, "containPII" : 1, "cloudHosted" : 1, "cloudProvider" : 1, "iRiskTrigger" : 1, "projectLeader" : 1, "dateRequested" : 1, "dateToBegin" : 1, "dateStarted": 1, "dateCompleted" : 1, "components" : 1} }])'

docker exec -it mongo-${ENV_SUFFIX} mongo pentest -u admin -p ${mongo_admin_password} --authenticationDatabase admin --eval 'db.createView("domo_findings", "pentests", [ { $lookup: { from: "findings", localField: "id", foreignField: "pentest_id", as: "f" } }, { $unwind: "$f" }, { $project: { "score" : "$f.score", "hostCount": { "$size": { "$ifNull": [ "$f.hosts", [] ] } }, "effort" : "$f.effort", "impact" : "$f.impact", "findingType": "$f.findingType", "coreImpactVA": "$f.ciValueAdd", "dateExploited" : "$f.dateExploited", "deleted" : "$f._deleted"} }])'

docker exec -it mongo-${ENV_SUFFIX} mongo pentest -u admin -p ${mongo_admin_password} --authenticationDatabase admin --eval "db.createRole( { role: 'domoRole', privileges: [{resource: {db: 'pentest', collection: 'domo_pentests'}, actions: ['find']},{resource: {db: 'pentest', collection: 'domo_findings'}, actions: ['find']}], roles: [] })"

docker exec -it mongo-${ENV_SUFFIX} mongo pentest -u admin -p ${mongo_admin_password} --authenticationDatabase admin --eval "db.createUser({ user: 'domo', pwd: '${mongo_domo_password}', roles: ['domoRole']});"

echo "Rebuild done"
